@import header

name: 'build-test'

on: [pull_request, push]

# secrets:
#  * GOOGLE_CREDENTIALS - base64 encoded google service account credentials, must be a single line with no whitespace
#  * BONJOUR_DRIVE_ID - google drive id of windows bonjour installer (Bonjour64.msi)
#  * OUTPUT_FOLDER_ID - google drive id of folder to upload build results to
#  * RESULTS_SHEET_ID - google sheets id of sheet to upload results to
jobs:
  build_and_test:
    name: '${{ matrix.os }}: build and test (install mdns: ${{ matrix.install_mdns }})'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        install_mdns: [false]
        use_conan: [true]
        include:
          - install_mdns: true
            use_conan: true
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: set environment variables
      shell: bash
      run: |
        if [[ "${{ matrix.os }}"  == "ubuntu-latest" ]]; then
          if [[ "${{ matrix.install_mdns }}" == "true" ]]; then
            echo "::set-env name=BUILD_NAME::${{ matrix.os }}_mdns"
          else
            echo "::set-env name=BUILD_NAME::${{ matrix.os }}_avahi"
          fi
        else
          echo "::set-env name=BUILD_NAME::${{ matrix.os }}"
        fi
        GITHUB_COMMIT=`echo "${{ github.sha }}" | cut -c1-7`
        echo "::set-env name=GITHUB_COMMIT::$GITHUB_COMMIT"
        echo "::set-env name=GITHUB_WORKSPACE::${{ github.workspace }}"
        echo "::set-env name=RUNNER_WORKSPACE::${{ runner.workspace }}"

    - name: install python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: install pip
      run: |
        python -m pip install --upgrade pip

    @import build-and-test

  build_and_test_ubuntu_14:
    name: 'Ubuntu 14.04 mdns no conan'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:14.04
    strategy:
      fail-fast: false
      matrix:
        install_mdns: [true]
        use_conan: [false]

    steps:
    - uses: actions/checkout@v2

    - name: set environment variables
      run: |
        echo "::set-env name=BUILD_NAME::ubuntu_14.04_mdns"
        GITHUB_COMMIT=`echo "${{ github.sha }}" | cut -c1-7`
        echo "::set-env name=GITHUB_COMMIT::$GITHUB_COMMIT"
        # github.workspace points to the host path not the docker path, the home directory defaults to the workspace directory
        echo "::set-env name=GITHUB_WORKSPACE::`pwd`"
        cd ..
        echo "::set-env name=RUNNER_WORKSPACE::`pwd`"

    - name: install build tools
      run: |
        apt-get update -q
        apt-get install -y software-properties-common
        add-apt-repository ppa:deadsnakes/ppa -y
        apt-get --allow-unauthenticated update -q
        apt-get --allow-unauthenticated install -y python3.6 python3.6-gdbm curl g++ make patch git
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 3
        ln -s /usr/bin/python3.6 /usr/bin/python
        curl -sS https://bootstrap.pypa.io/get-pip.py | python
        curl -sS https://nodejs.org/dist/v12.16.2/node-v12.16.2-linux-x64.tar.xz | tar -xJ
        echo "::add-path::`pwd`/node-v12.16.2-linux-x64/bin"

    @import build-and-test

  make_badges:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [build_and_test, build_and_test_ubuntu_14]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: set environment variables
      shell: bash
      run: |
        echo "::set-env name=GITHUB_WORKSPACE::${{ github.workspace }}"
        echo "::set-env name=RUNNER_WORKSPACE::${{ runner.workspace }}"

    @import google-setup

    - name: make badges
      run: |
        # combine badges from all builds, exclude macos-latest
        ${{ github.workspace }}/Sandbox/make_badges.sh ${{ secrets.OUTPUT_FOLDER_ID }} macos-latest

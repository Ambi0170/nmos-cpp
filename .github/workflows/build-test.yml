name: 'build-test'

on: [pull_request, push]

jobs:
  build_and_test:
    name: '${{ matrix.os }}: build and test (install mdns: ${{ matrix.install_mdns }})'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        install_mdns: [false]
        include:
          - install_mdns: true
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup google drive
      run: |
        mkdir ${{ github.workspace }}/gdrive
        echo "${{ env.credentials }}" | openssl base64 -d -A -out ${{ github.workspace }}/gdrive/credentials.json
      env:
        credentials: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: download google drive windows
      if: matrix.os =='windows-latest'
      run: |
        choco install wget -r
        wget https://github.com/gdrive-org/gdrive/releases/download/2.1.0/gdrive-windows-x64.exe -O ${{ github.workspace }}/gdrive/gdrive-windows-x64.exe -q
        echo "::set-env name=GDRIVE_PATH::${{ github.workspace }}/gdrive/gdrive-windows-x64.exe"

    - name: install python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: install pip and conan
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: install cmake
      uses: lukka/get-cmake@v3.17.1

    - name: windows setup
      if: matrix.os =='windows-latest'
      run: |
        echo "::set-env name=CMAKE_EXTRA_ARGS::$CMAKE_EXTRA_ARGS -DNMOS_CPP_CONAN_BUILD_LIBS=cpprestsdk;missing -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe"
        ${{ env.GDRIVE_PATH }} --config ${{ github.workspace }}/gdrive --service-account credentials.json download --path ${{ github.workspace }} ${{ env.bonjourid }}
        msiexec /i ${{ github.workspace }}\Bonjour64.msi /qn /norestart
      env:
        bonjourid: ${{ secrets.BONJOUR_DRIVE_ID }}

    - name: mac setup
      if: matrix.os =='macos-latest'
      run: echo "::set-env name=CMAKE_EXTRA_ARGS::$CMAKE_EXTRA_ARGS '-DNMOS_CPP_CONAN_BUILD_LIBS=cpprestsdk;missing'"

    - name: ubuntu mdns install
      if: matrix.os =='ubuntu-latest' && matrix.install_mdns == true
      run: |
        cd ${{ github.workspace }}
        wget https://opensource.apple.com/tarballs/mDNSResponder/mDNSResponder-878.200.35.tar.gz
        tar -xzf mDNSResponder-878.200.35.tar.gz
        patch -d mDNSResponder-878.200.35/ -p1 < ${{ github.workspace }}/Development/third_party/mDNSResponder/unicast.patch
        patch -d mDNSResponder-878.200.35/ -p1 < ${{ github.workspace }}/Development/third_party/mDNSResponder/permit-over-long-service-types.patch
        patch -d mDNSResponder-878.200.35/ -p1 < ${{ github.workspace }}/Development/third_party/mDNSResponder/poll-rather-than-select.patch
        cd mDNSResponder-878.200.35/mDNSPosix
        make os=linux && sudo make os=linux install

    - name: ubuntu avahi setup
      if: matrix.os =='ubuntu-latest' && matrix.install_mdns == false
      run: |
        sudo apt-get install -f libavahi-compat-libdnssd-dev
        echo "::set-env name=CTEST_EXTRA_ARGS::$CTEST_EXTRA_ARGS -E testMdnsAdvertiseAddress"

    - uses: ilammy/msvc-dev-cmd@v1
    - name: build
      uses: lukka/run-cmake@v2.0
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/Development/CMakeLists.txt'
        buildDirectory: '${{ runner.workspace }}/build/'
        cmakeAppendedArgs: '-GNinja -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_EXTRA_ARGS }}'

    - name: unit test
      run: |
        cd ${{ runner.workspace }}/build/
        ctest --output-on-failure ${{ env.CTEST_EXTRA_ARGS }}




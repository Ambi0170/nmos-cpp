name: 'build-test'

on: [pull_request, push]

jobs:
  build_and_test:
    name: '${{ matrix.os }}: build and test'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: install python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: install pip and conan
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: install cmake
      uses: lukka/get-cmake@v3.17.1

    - name: windows setup
      if: matrix.os =='windows-latest'
      run: echo "::set-env name=CMAKE_EXTRA_ARGS::$CMAKE_EXTRA_ARGS -DNMOS_CPP_CONAN_BUILD_LIBS=cpprestsdk;missing -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe"

    - name: mac setup
      if: matrix.os =='macos-latest'
      run: echo "::set-env name=CMAKE_EXTRA_ARGS::$CMAKE_EXTRA_ARGS '-DNMOS_CPP_CONAN_BUILD_LIBS=cpprestsdk;missing'"

    - name: linux setup
      if: matrix.os =='ubuntu-latest'
      run: sudo apt-get install -f libavahi-compat-libdnssd-dev

    - uses: ilammy/msvc-dev-cmd@v1
    - name: build
      uses: lukka/run-cmake@v2.0
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/Development/CMakeLists.txt'
        buildDirectory: '${{ runner.workspace }}/build/'
        cmakeAppendedArgs: '-GNinja -DCMAKE_BUILD_TYPE=Release ${{ env.CMAKE_EXTRA_ARGS }}'



